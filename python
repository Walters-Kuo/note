#在建立虛擬環境的時候，在你決定要放該虛擬環境的資料夾之後，以腳本 (script) 執行 venv 模組並且給定資料夾路徑：
cd /home/walters/work/
python3 -m venv auto-env
source ~/envs/auto-env/bin/activate

#test env
python
import sys
sys.path
['', '/Library/Frameworks/Python.framework/Versions/3.10/lib/python310.zip', '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10', '/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/lib-dynload', '/Users/walterskuo/Desktop/work/auto/auto-env/lib/python3.10/site-packages']

#install the lastest of a package
python -m pip install --upgrade pip

python -m pip install novas
python -m pip freeze > requirements.txt #display python list of library

python -m pip install virtualenvwrapper
echo "source virtualenvwrapper.sh" >> ~/.zshrc

#map
def test(x):
    return x*2 
or 
test = lambda x: x * 2

mylist = [1, 2, 3, 4, 5] 

ans_list = []
for ele in mylist:
    ans_list.append(test(ele))
print("test with for and basic list method = ", ans_list)

print("test with for in list = ", [test(ele) for ele in mylist])

print("test with map = ", list(map(test, mylist)))

#Lambda functions are particularly useful in cases where we need to have a short one-time use function.
Syntax: lambda arguments: expression

even_or_odd = lambda a : a % 2 == 0
numbers = [1,2,3,4,5]
even = list(map(even_or_odd, numbers))
print(map(even_or_odd, numbers))
print(even)


#Exceptional Handling
#An exception is a condition that occurs during the execution of the program and interrupts the execution. 
#We use to try and except blocks to handle exceptions in python. To handle multiple exceptions at a time we use multiple except blocks.

import sys
try:
    f = open('myfile.txt')
    s = f.readline()
    i = int(s.strip())
except OSError as err:
    print("OS error: {0}".format(err))
except ValueError:
    print("Could not convert data to an integer.")
except:
    print("Unexpected error", sys.exc_info()[0])
    raise
finally:
    print("Operation Successfully Done!!")
