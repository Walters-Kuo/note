
brew install podman
brew install podman-desktop
podman machine init
podman machine start
podman info

podman pull docker.io/library/postgres
podman run --name postgre -d -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=passwd docker.io/library/postgres
docker run -d -p 27017:27017 --name mongodb mongo -v /data/db:/data/db
podman run -d mongo -p 27017:27017 -it -v src:/data/db --name mongodb  
podman run -itd --name mongo -p 27017:27017 mongo -v src:/data/db --auth
run -itd --name mongo -p 27017:27017 mongo -v src:/data/db

podman run --name mongo -d -p 27017:27017 -v src:/data/db:Z mongo
podman volume inspect src
podman volume ls
podman run --rm -it --network host mongo mongo

podman run --interactive --tty --name u1 --volume /tmp/.X11-unix:/tmp/.X11-unix \
--env DISPLAY --device /dev/dri --device /dev/snd --device /dev/input \
--volume /etc/localtime:/etc/localtime:ro --volume /Users/walters/workarea/podman/sharing:/mnt ubuntu

podman exec --interactive --tty --user $(whoami) --workdir /home/$(whoami) u1 /bin/bash
podman exec --interactive --tty --user walters --workdir /home/walters u1 /bin/bash
docker exec -it mongo_example bash
podman exec -it mongo mongo admin

podman machine set --rootful


podman rm -f `podman ps -aq`


Command	Description	Example
podman search [image-name]	Search repositories for an image.	podman search ubuntu
podman pull [image-name]	Pull an image from a repository.	podman pull docker.io/library/ubuntu
podman images	List locally available images.	podman images
podman run [image-name]	Create and run a container using an image.	podman run -dt -p 8080:80 docker.io/library/ubuntu
podman stop [container-id]	Stop a running container.	podman stop ca0ecf758897
podman rm [container-id]	Remove a container.	podman rm ca0ecf758897
podman rmi [image-name]	Remove an image.	podman rmi docker.io/library/ubuntu
podman info	Receive information about the Podman installation.	podman info



podman run -dt \
--name nginx \
--pod webdev \
--volume ~/Desktop/udn/pod:/etc/nginx/conf.d:ro \
--volume ~/Desktop/udn/pod/dev:/var/www/dev \
--restart on-failure \
docker.io/library/nginx:alpine


podman run -dt \
--name php7 \
--pod webdev \
--volume ~/Desktop/udn/pod/dev:/var/www/dev \
--restart on-failure \
docker.io/library/php:7.4-fpm-alpine

podman machine start                                                                                       ✔  11:00:33 
Starting machine "podman-machine-default"
Waiting for VM ...
Mounting volume... /Users/walters:/Users/walters

This machine is currently configured in rootless mode. If your containers
require root permissions (e.g. ports < 1024), or if you run into compatibility
issues with non-podman clients, you can switch using the following command:

	podman machine set --rootful

API forwarding listening on: /Users/walters/.local/share/containers/podman/machine/podman-machine-default/podman.sock

The system helper service is not installed; the default Docker API socket
address can't be used by podman. If you would like to install it run the
following commands:

	sudo /usr/local/Cellar/podman/4.2.0/bin/podman-mac-helper install
	podman machine stop; podman machine start

You can still connect Docker API clients by setting DOCKER_HOST using the
following command in your terminal session:

	export DOCKER_HOST='unix:///Users/walters/.local/share/containers/podman/machine/podman-machine-default/podman.sock'

Machine "podman-machine-default" started successfully"


